{
    "inittable": {
        "scope": "go",
        "prefix": "inittable",
        "body": [
            "package migrations",
            "",
            "import (",
            "\t\"fmt\"",
            "\t\"slices\"",
            "",
            "\t\"github.com/pocketbase/pocketbase/core\"",
            "\t\"github.com/pocketbase/pocketbase/tools/types\"",
            ")",
            "",
            "",
            "func init() {",
			"// 按依赖关系排序的表创建配置",
            "// 创建顺序：基础表 -> 依赖表 -> 关联表",
            "\t\tvar tableCreationRequests = []TableCreationRequest{",
            "\t\t{",
            "\t\t\tTableName: Table$1,",
            "\t\t\tFields: []core.Field{",
            "\t\t\t\t&core.TextField{Name: \"name\", Required: true, Max: 30},",
            "\t\t\t},",
            "\t\t},",
            "\t}",
			"",
            "\t// 注册迁移函数",
            "\tcore.AppMigrations.Register(func(txApp core.App) error {",
            "\t\t// 创建所有表",
            "\t\tfor _, request := range tableCreationRequests {",
            "\t\t\tif err := CreateTable(txApp, request); err != nil {",
            "\t\t\t\treturn fmt.Errorf(\"failed to create table %s: %w\", request.TableName, err)",
            "\t\t\t}",
            "\t\t}",
            "",
			"",
            "\t\treturn nil",
            "\t}, func(txApp core.App) error {",
            "\t\tvar allTables []string",
            "\t\tfor _, request := range tableCreationRequests {",
            "\t\t\tallTables = append(allTables, request.TableName)",
            "\t\t}",
            "\t\tslices.Reverse(allTables)",
            "\t\tfor _, tableName := range allTables {",
            "\t\t\tcollection, err := txApp.FindCollectionByNameOrId(tableName)",
            "\t\t\tif err == nil {",
            "\t\t\t\tif err := txApp.Delete(collection); err != nil {",
            "\t\t\t\t\treturn fmt.Errorf(\"failed to delete table %s: %w\", tableName, err)",
            "\t\t\t\t}",
            "\t\t\t}",
            "\t\t}",
            "",
            "\t\treturn nil",
            "\t\t})",
            "}"
        ],
        "description": "创建Collection表结构迁移文件"
    },
	"initdata":{
    "scope": "go",
    "prefix": "initdata",
    "body": [
        "package migrations",
        "",
        "import (",
        "\t\"fmt\"",
        "",
        "\t\"github.com/pocketbase/pocketbase/core\"",
        ")",
        "",
        "func init() {",
        "\t// 定义初始化数据配置",
        "\tvar initDataRequests = []DataImportRequest{",
        "\t\t{",
        "\t\t\tTable:        TableSysDictType,",
        "\t\t\tUniqueFields: []string{\"id\"},",
        "\t\t\tData: []map[string]interface{}{",
        "\t\t\t\t{\"id\": \"upbepvx05k6j1pb\"},//json格式的初始化数据",
        "\t\t\t},",
        "\t\t},",
        "\t}",
        "",
        "\tcore.AppMigrations.Register(func(txApp core.App) error {",
        "\t\t// 循环执行数据初始化",
        "\t\tfor i, request := range initDataRequests {",
        "\t\t\tif err := ImportData(txApp, request); err != nil {",
        "\t\t\t\treturn fmt.Errorf(\"初始化第 %d 组数据失败 (表: %s): %w\", i+1, request.Table, err)",
        "\t\t\t}",
        "\t\t}",
        "\t\treturn nil",
        "\t}, func(txApp core.App) error {",
        "\t\t// 循环执行数据回滚（按相反顺序使用 RollbackData）",
        "\t\tfor i := len(initDataRequests) - 1; i >= 0; i-- {",
        "\t\t\trequest := initDataRequests[i]",
        "\t\t\tif err := RollbackData(txApp, request); err != nil {",
        "\t\t\t\treturn fmt.Errorf(\"回滚第 %d 组数据失败 (表: %s): %w\", i+1, request.Table, err)",
        "\t\t\t}",
        "\t\t}",
        "\t\treturn nil",
        "\t})",
        "}"
    ],
    "description": "创建Collection表数据迁移文件"
}
}